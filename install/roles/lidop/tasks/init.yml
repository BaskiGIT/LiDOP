---

- name: Init
  block:
  - set_fact: ipaddress="{{ lookup('env','IPADDRESS') }}"
  - set_fact: public_ipaddress="{{ lookup('env','PUBLIC_IPADDRESS') }}"

  - name: set base_urls to ip
    set_fact: 
      base_url: "{{ protocol }}://{{ public_ipaddress }}"
      jenkins_base_url: "{{ protocol }}://{{ public_ipaddress }}/jenkins"  
      gitbucket_base_url: "{{ protocol }}://{{ public_ipaddress }}/gitbucket"  
    when: domain_name == "lidop.local"
    
  - name: set base_urls to xip.io
    set_fact: 
      base_url: "{{ protocol }}://www.{{ public_ipaddress }}.{{ domain_name }}"  
      jenkins_base_url: "{{ protocol }}://www.{{ public_ipaddress }}.{{ domain_name }}/jenkins"  
      gitbucket_base_url: "{{ protocol }}://www.{{ public_ipaddress }}.{{ domain_name }}/gitbucket"  
    when: domain_name == "xip.io"

  - name: set base_urls to domain name
    set_fact: 
      base_url: "{{ protocol }}://{{ domain_name }}"  
      jenkins_base_url: "{{ protocol }}://{{ domain_name }}/jenkins"  
      gitbucket_base_url: "{{ protocol }}://{{ domain_name }}/gitbucket" 
    when: 
      - domain_name != "lidop.local"
      - domain_name != "xip.io"

  - name: Read swarm_manager_ip
    consul_kv:
        key: "config/swarm_manager_ip"
        host: "{{ consul_ip }}"
    register: swarm_manager_ip
    when: node == "worker"
  - set_fact: swarm_manager_ip="{{ swarm_manager_ip.data.Value }}"  
    when: node == "worker"

  - name: Read swarm_manager_token
    consul_kv:
        key: "config/swarm_manager_token"
        host: "{{ consul_ip }}"
    register: swarm_manager_token
    when: node == "worker"
  - set_fact: swarm_manager_token="{{ swarm_manager_token.data.Value }}"  
    when: node == "worker"

  - name: Read swarm_worker_token
    consul_kv:
        key: "config/swarm_worker_token"
        host: "{{ consul_ip }}"
    register: swarm_worker_token
    when: node == "worker"
  - set_fact: swarm_worker_token="{{ swarm_worker_token.data.Value }}"  
    when: node == "worker"

  - name: Read secret_password
    consul_kv:
        key: "config/secret_password"
        host: "{{ consul_ip }}"
    register: secret_password
    when: node == "worker"
  - set_fact: secret_password="{{ secret_password.data.Value }}"  
    when: node == "worker"
  - set_fact: secret_password="{{ secret_password_generator }}"  
    when: node == "master"

  - debug:
      msg: "swarm_manager_ip: {{ swarm_manager_ip }}"  
    when: node == "worker"

  - debug:
      msg: "swarm_worker_token: {{ swarm_worker_token }}"  
    when: node == "worker"

  - debug:
      msg: "swarm_manager_token: {{ swarm_manager_token }}"  
    when: node == "worker"

  - debug:
      msg: "secret_password: {{ secret_password }}"  
    when: node == "worker"

  - debug:
      msg: "Public IP: {{ public_ipaddress }}"  

  - debug:
      msg: "Private IP: {{ ipaddress }}"  
 
  - debug:
      msg: "Install Mode: {{ install_mode }}"  

  - debug:
      msg: "Secret: {{ secret_password }}"  

  - debug:
      msg: "protocol: {{ protocol }}"  

  - debug:
      msg: "certificate_creation: {{ certificate_creation }}"  

  - debug:
      msg: "Node MasterIpaddress: {{ swarm_manager_ip }}"  
    when: node == "worker"

  tags: init